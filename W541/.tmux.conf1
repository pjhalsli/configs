#  ██████████ ████     ████ ██     ██ ██     ██
# ░░░░░██░░░ ░██░██   ██░██░██    ░██░░██   ██
#     ░██    ░██░░██ ██ ░██░██    ░██ ░░██ ██
#     ░██    ░██ ░░███  ░██░██    ░██  ░░███
#     ░██    ░██  ░░█   ░██░██    ░██   ██░██
#     ░██    ░██   ░    ░██░██    ░██  ██ ░░██
#     ░██    ░██        ░██░░███████  ██   ░░██
#     ░░     ░░         ░░  ░░░░░░░  ░░     ░░

# shell
set -g default-command /usr/bin/zsh
set -g default-shell /usr/bin/zsh

# screen mode
set -g default-terminal "xterm-256color"
set-option -sa terminal-overrides ",xterm*:Tc"

# start with window 1 (instead of 0)
set -g base-index 1

# renumber windows after closing
set -g renumber-windows on

# start with pane 1
set -g pane-base-index 1

# rename window to reflect current program
setw -g automatic-rename on

# renumber windows when a window is closed
set -g renumber-windows on

# remove esc delay
set -sg escape-time 0

# history
set -g history-limit 10000

# use vi mode
setw -g mode-keys vi
set -g status-keys vi

# plebs mode
set -g mouse on

# status line
set -g status-justify left
set -g status-style 'fg=colour0'
set -g status-interval 2

# messaging
set -g message-style "bg=colour0,fg=colour6"
set -g message-command-style "bg=colour1,fg=colour0"

# window mode
setw -g mode-style "bg=colour14,fg=colour0"

# split style
set -g pane-border-style "fg=colour0"
set -g pane-active-border-style "fg=colour8"

#resizing
setw -g aggressive-resize on

# window status
set-option -g status-position bottom
setw -g window-status-format "#[fg=colour0]░▓█#[bg=colour0,fg=colour6]#W "
setw -g window-status-current-format "#[fg=colour6]░▓█#[bg=colour6,fg=colour0]#W "

# info on right
set -g status-right-length 100
set -g status-right '#(~/.config/tmux/tmux-status)'
# info on left (no session display)
set -g status-left ''

# loud or quiet?
set-option -g visual-activity on
set-option -g visual-bell off
set-option -g visual-silence off
set-window-option -g monitor-activity off
set-option -g bell-action none

# tmux clock
set -g clock-mode-colour colour14

# change prefix
unbind C-b
#set-option -g prefix `
#bind ` send-prefix

set -g prefix C-a

# vim style copy paste mode
unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer
bind -Tcopy-mode-vi 'v' send -X begin-selection
bind -Tcopy-mode-vi 'y' send -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# splitting
unbind %
bind h split-window -v
unbind '"'
bind v split-window -h

unbind c
bind Enter new-window
bind C split-window
bind c split-window -h

# Select window
bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9
bind -n M-0 select-window -t 10

# navigate and resize splits
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -r C-h resize-pane -L 2
bind -r C-l resize-pane -R 2
bind -r C-k resize-pane -U 2
bind -r C-j resize-pane -D 2

# zoom split
unbind z
bind z if-shell "$is_vim" "send-keys Space z" "resize-pane -Z"

# vim style commands
bind : command-prompt

# source config file
bind r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded."

# other random key-binding changes
bind x kill-pane
bind t set status
bind a set-window-option synchronize-panes \; display-message "synchronize"
bind j prev
bind k next
bind p swap-window -t -1
bind n swap-window -t +1
bind-key X kill-session
bind Tab last-window  # move to last active window
bind > swap-pane -D   # swap current pane with the next one
bind < swap-pane -U   # swap current pane with the previous one
